//import
import React, { Component } from 'react';
import { Text, View, Image, Linking, NativeModules } from 'react-native';
import Card from './Card';
import CardSection from './CardSection';
import Button from './Button';
//import Promise from 'react';
import { Callback, WritableMap } from 'react';

//component
const MyAlbumsBizLogic = NativeModules.MyAlbumsBizLogic;
//var receivedMap;

/* for PROMISE only 
 * 
async function getPromise(albumTitle) {
  try {
    console.debug('.... getPromise<-AlbumDetail: START.');         
    var receivedMap= await MyAlbumsBizLogic.isAvailable(albumTitle, receiveData);
    console.debug('.... AlbumDetail: in. Album availability='+String (availability)+'.');
  } catch (e) {
    console.error(e);
  }
};
receiveData = (result) => {
  console.debug('.... AlbumDetail: in. receiveData='+result);  
  this.setState({availability: result}); 
}
*/

//CLASS
class AlbumDetail extends Component {
  componentWillMount(){
    this.setState({
      availability: undefined
    })    
  }
 
  /*getPromise(albumName) {
    try {
      console.debug('.... getPromise<-AlbumDetail: START.');         
      MyAlbumsBizLogic.isAvailable(albumTitle, this.receiveData);
      console.debug('.... AlbumDetail: Album availability='+String (availability)+'.');
    } catch (e) {
      console.error(e);
    }
  }
  receiveData = (result) => {
    console.debug('.... AlbumDetail: in. receiveData='+result);  
    this.setState({availability: result}); 
  }
  */
  render(){
    const MyAlbumsBizLogic = NativeModules.MyAlbumsBizLogic;    
    const {data} = this.props;
    const { title, artist, thumbnailImage, image, url, year } = data;    
    const { thumbnailStyle, thumbnailContainerStyle, headerTextStyle, imageStyle, headerContentStyle } = styles;
    //this.setState({albumName: data.title}); 
    var errMsg = '';
    var valReceived = '';
    //var runMethod = getPromise(data.title);
    MyAlbumsBizLogic.isAvailable(data.title, 
      (errMsg) => {
        console.log(msg);
      }, 
      (successmsg) => {
        receiveData(successmsg);    
      }
    );

    receiveData = (result) => {
      valReceived = String(result);
      console.debug('.... AlbumDetail: in. receiveData='+valReceived);  
//      this.setState({availability: result}); 
    }
  
    var buttonText = (valReceived === 'no')? 'Sold Out' : 'Buy Now';
    console.debug('.... AlbumDetail: in. Album='+data.title+'-'+valReceived);

    return (
      <Card>
        <CardSection>
          <View style={thumbnailContainerStyle}>
            <Image
              style={thumbnailStyle}
              source={{ uri: thumbnailImage }}
            />
          </View>
          <View style={headerContentStyle}>
            <Text style={headerTextStyle}>{title}</Text>
            <Text>{artist} {year}</Text>
          </View>
        </CardSection>

        <CardSection>
          <Image
            style={imageStyle}
            source={{ uri: image }}
          />
        </CardSection>

        <CardSection>
          <Button onPress={() => Linking.openURL(url)}>
              {buttonText}
          </Button>
        </CardSection>
      </Card>
    );
  }
};

const styles = {
  headerContentStyle: {
    flexDirection: 'column',
    justifyContent: 'space-around'
  },
  headerTextStyle: {
    fontSize: 18
  },
    thumbnailStyle: {
    height: 50,
    width: 50
  },
    thumbnailContainerStyle: {
    justifyContent: 'center',
    alignItems: 'center',
    marginLeft: 10,
    marginRight: 10
  },
    imageStyle: {
    height: 300,
    flex: 1,
    width: null
  }
};

//export component
export default AlbumDetail;
